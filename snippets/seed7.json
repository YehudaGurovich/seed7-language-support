{
	"Program Skeleton": {
		"prefix": "main",
		"body": [
			"$ include \"seed7_05.s7i\";",
			"",
			"const proc: main is func",
			"#$1  local",
			"    $2",
			"  begin",
			"    $0",
			"  end func;"
		],
		"description": "Basic Seed7 program structure"
	},
	"Function Declaration": {
		"prefix": "func",
		"body": [
			"const func $1: $2 is func",
			"  result",
			"    var $1: res is $3;",
			"#$4  local",
			"    $0",
			"  begin",
			"",
			"  end func;"
		],
		"description": "Declare a function"
	},
	"Procedure Declaration": {
		"prefix": "proc",
		"body": [
			"const proc: $1 is func",
			"#$2  local",
			"    $0",
			"  begin",
			"",
			"  end func;"
		]
	},
	"If Statement": {
		"prefix": "if",
		"body": [
			"if $1 then",
			"  $0",
			"end if;"
		],
		"description": "If statement"
	},
	"If Elsif Else Statement": {
		"prefix": "elseif",
		"body": [
			"if $0 then",
			"  $1",
			"elsif $2 then",
			"  $3",
			"else",
			"  $4",
			"end if;"
		],
		"description": "If-ElseIf statement"
	},
	"If Else Statement": {
		"prefix": "ifelse",
		"body": [
			"if $1 then",
			"  $2",
			"else",
			"  $0",
			"end if;"
		],
		"description": "If-Else statement"
	},
	"Case Statement": {
		"prefix": "case",
		"body": [
			"case $1 of",
			"when {$2}:",
			"  $0",
			"otherwise:",
			"end case;"
		],
		"description": "Case statement"
	},
	"While Loop": {
		"prefix": "while",
		"body": [
			"while $1 do",
			"  $0",
			"end while;"
		],
		"description": "While loop"
	},
	"For Loop": {
		"prefix": "for",
		"body": [
			"for $1 range $2 do",
			"  $0",
			"end for;"
		],
		"description": "For loop"
	},
	"Const Declaration": {
		"prefix": "const",
		"body": [
			"const $1: $2 is $0;"
		],
		"description": "Declare a constant"
	},
	"Var Declaration": {
		"prefix": "var",
		"body": [
			"var $1: $2 is $0;"
		],
		"description": "Declare a variable"
	},
	"Write Statement": {
		"prefix": "wln",
		"body": [
			"writeln($0);"
		],
		"description": "Write output to console"
	},
	"Read Statement": {
		"prefix": "rln",
		"body": [
			"readln($0);"
		],
		"description": "Read input from console"
	},
	"Array starting on 1 declaration": {
		"prefix": "array",
		"body": [
			"var array $1: $2 is ($0);"
		]
	},
	"Array starting on 0 declaration": {
		"prefix": "arr0",
		"body": [
			"var array $1: $2 is [0] ($0);"
		]
	}
}